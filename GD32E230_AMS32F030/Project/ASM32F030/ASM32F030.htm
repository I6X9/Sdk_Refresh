<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\ASM32F030\ASM32F030.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\ASM32F030\ASM32F030.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Mon Apr 22 11:37:53 2019
<BR><P>
<H3>Maximum Stack Usage =        156 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Usart_Debug_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[f]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[19]">I2C2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[21]">Led_DispAutoChange</a> from single_pwm_led.o(i.Led_DispAutoChange) referenced from single_pwm_led.o(i.Led_DispInit)
 <LI><a href="#[22]">Light_DispAutoChange</a> from single_pwm_light.o(i.Light_DispAutoChange) referenced from single_pwm_light.o(i.Light_DispInit)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1a]">SPI1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1b]">SPI2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f030.o(.text)
 <LI><a href="#[14]">TIM14_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[15]">TIM15_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[16]">TIM16_IRQHandler</a> from stm32f0xx_it.o(i.TIM16_IRQHandler) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[17]">TIM17_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1c]">USART1_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[1d]">USART2_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f030.o(.text) referenced from startup_stm32f030.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f030.o(.text)
 <LI><a href="#[23]">fputc</a> from asmplatformconfig.o(i.fputc) referenced from printf5.o(i.__0printf$5)
 <LI><a href="#[1e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(.text)
</UL>
<P><STRONG><a name="[7b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[24]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[7c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[7d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[7e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[7f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[80]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispScan
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispAutoChange
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispScan
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispAutoChange
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Systick_Init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispAutoChange
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[25]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[86]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[87]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[88]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>ADC_ChannelConfig</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f0xx_adc.o(i.ADC_ChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_ChannelConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[31]"></a>ADC_Cmd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f0xx_adc.o(i.ADC_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[32]"></a>ADC_DeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f0xx_adc.o(i.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ADC_DeInit &rArr; RCC_APB2PeriphResetCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[34]"></a>ADC_GetCalibrationFactor</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f0xx_adc.o(i.ADC_GetCalibrationFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_GetCalibrationFactor &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[35]"></a>ADC_GetConversionValue</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC_GetConversionValue &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_WorkStateDetect
</UL>

<P><STRONG><a name="[36]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f0xx_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_GetFlagStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_WorkStateDetect
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[37]"></a>ADC_Init</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32f0xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[38]"></a>ADC_StartOfConversion</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_adc.o(i.ADC_StartOfConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC_StartOfConversion &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[71]"></a>ADC_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[4a]"></a>ChangeTimerPeriod</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timeout_api.o(i.ChangeTimerPeriod))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispAutoChange
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispAutoChange
</UL>

<P><STRONG><a name="[54]"></a>CheckTimer</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, timeout_api.o(i.CheckTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_Display
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Display
</UL>

<P><STRONG><a name="[39]"></a>Display</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, asmplatformconfig.o(i.Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Display &rArr; Light_Display &rArr; CheckTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_Display
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3c]"></a>DisplayScan</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, asmplatformconfig.o(i.DisplayScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DisplayScan &rArr; Light_DispScan &rArr; PwmConfigChannel &rArr; RCC_APB2PeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispScan
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispScan
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[3f]"></a>GPIO_Init</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ScanGpioConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioKeyInit
</UL>

<P><STRONG><a name="[40]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, stm32f0xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_PinAFConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
</UL>

<P><STRONG><a name="[41]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ReadInputDataBit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioKeyScan
</UL>

<P><STRONG><a name="[42]"></a>GPIO_ResetBits</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f0xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_ResetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispScan
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ScanGpioConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Control
</UL>

<P><STRONG><a name="[43]"></a>GPIO_SetBits</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f0xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_SetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispScan
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Control
</UL>

<P><STRONG><a name="[44]"></a>GpioKeyInit</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gpio_key.o(i.GpioKeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GpioKeyInit &rArr; GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>GpioKeyScan</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gpio_key.o(i.GpioKeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GpioKeyScan &rArr; GPIO_ReadInputDataBit &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOutSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTimeOut
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>InitTimer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timeout_api.o(i.InitTimer))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
</UL>

<P><STRONG><a name="[48]"></a>IsTimeOut</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, timeout_api.o(i.IsTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IsTimeOut
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_WorkStateDetect
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioKeyScan
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>Led_DispInit</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, single_pwm_led.o(i.Led_DispInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Led_DispInit &rArr; PwmEnableChannel &rArr; GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ScanGpioConfig
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispStateSet
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimer
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>Led_DispScan</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, single_pwm_led.o(i.Led_DispScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Led_DispScan &rArr; PwmConfigChannel &rArr; RCC_APB2PeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScan
</UL>

<P><STRONG><a name="[52]"></a>Led_DispStateSet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, single_pwm_led.o(i.Led_DispStateSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Led_DispStateSet
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3a]"></a>Led_Display</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, single_pwm_led.o(i.Led_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Led_Display &rArr; CheckTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
</UL>

<P><STRONG><a name="[55]"></a>Light_DispInit</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, single_pwm_light.o(i.Light_DispInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Light_DispInit &rArr; PwmEnableChannel &rArr; GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispStateSet
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimer
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimer
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>Light_DispScan</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, single_pwm_light.o(i.Light_DispScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Light_DispScan &rArr; PwmConfigChannel &rArr; RCC_APB2PeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScan
</UL>

<P><STRONG><a name="[56]"></a>Light_DispStateSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, single_pwm_light.o(i.Light_DispStateSet))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispInit
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>Light_Display</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, single_pwm_light.o(i.Light_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Light_Display &rArr; CheckTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>PwmConfigChannel</STRONG> (Thumb, 436 bytes, Stack size 32 bytes, stm32f0xx_pwm.o(i.PwmConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PwmConfigChannel &rArr; RCC_APB2PeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetClockDivision
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetAutoreload
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CounterModeConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispScan
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispScan
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwm_SaveConfig
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
</UL>

<P><STRONG><a name="[4f]"></a>PwmEnableChannel</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, stm32f0xx_pwm.o(i.PwmEnableChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PwmEnableChannel &rArr; GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOCxM
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PolarityConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PolarityConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PolarityConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PolarityConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwm_SaveConfig
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
</UL>

<P><STRONG><a name="[69]"></a>Pwm_SaveConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, asmplatformconfig.o(i.Pwm_SaveConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Pwm_SaveConfig &rArr; PwmEnableChannel &rArr; GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_AHBPeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_ScanGpioConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioKeyInit
</UL>

<P><STRONG><a name="[58]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_APB1PeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[6a]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_APB1PeriphResetCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[57]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_APB2PeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
</UL>

<P><STRONG><a name="[33]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RCC_APB2PeriphResetCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
</UL>

<P><STRONG><a name="[6b]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 348 bytes, Stack size 24 bytes, stm32f0xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>StartTimer</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timeout_api.o(i.StartTimer))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SysTick_Handler &rArr; DisplayScan &rArr; Light_DispScan &rArr; PwmConfigChannel &rArr; RCC_APB2PeriphClockCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(.text)
</UL>
<P><STRONG><a name="[6d]"></a>System_Systick_Init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, asmplatformconfig.o(i.System_Systick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = System_Systick_Init &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>System_WaterPump_Control</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, asmplatformconfig.o(i.System_WaterPump_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = System_WaterPump_Control &rArr; GPIO_SetBits &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>System_WaterPump_Init</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, asmplatformconfig.o(i.System_WaterPump_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = System_WaterPump_Init &rArr; ADC_DeInit &rArr; RCC_APB2PeriphResetCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16]"></a>TIM16_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.TIM16_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIM_CCxCmd</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_CCxCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_CCxCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
</UL>

<P><STRONG><a name="[61]"></a>TIM_Cmd</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[59]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_CounterModeConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_CounterModeConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[62]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_CtrlPWMOutputs &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[64]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_OC1PolarityConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_OC1PolarityConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
</UL>

<P><STRONG><a name="[65]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_OC2PolarityConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_OC2PolarityConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
</UL>

<P><STRONG><a name="[66]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_OC3PolarityConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_OC3PolarityConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
</UL>

<P><STRONG><a name="[67]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_OC4PolarityConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_OC4PolarityConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
</UL>

<P><STRONG><a name="[5c]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_PrescalerConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_PrescalerConfig &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[63]"></a>TIM_SelectOCxM</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_SelectOCxM))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SelectOCxM &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmEnableChannel
</UL>

<P><STRONG><a name="[5b]"></a>TIM_SetAutoreload</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_SetAutoreload))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetAutoreload &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[5a]"></a>TIM_SetClockDivision</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_SetClockDivision))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetClockDivision &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[5e]"></a>TIM_SetCompare1</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_SetCompare1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetCompare1 &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[5d]"></a>TIM_SetCompare2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_SetCompare2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetCompare2 &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[5f]"></a>TIM_SetCompare3</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_SetCompare3))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetCompare3 &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[60]"></a>TIM_SetCompare4</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32f0xx_tim.o(i.TIM_SetCompare4))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_SetCompare4 &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PwmConfigChannel
</UL>

<P><STRONG><a name="[47]"></a>TimeOutSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timeout_api.o(i.TimeOutSet))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_WorkStateDetect
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioKeyScan
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>USART_Cmd</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32f0xx_usart.o(i.USART_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART_Cmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
</UL>

<P><STRONG><a name="[73]"></a>USART_DeInit</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, stm32f0xx_usart.o(i.USART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART_DeInit &rArr; RCC_APB2PeriphResetCmd &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
</UL>

<P><STRONG><a name="[74]"></a>USART_GetFlagStatus</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, stm32f0xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART_GetFlagStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[75]"></a>USART_Init</STRONG> (Thumb, 360 bytes, Stack size 64 bytes, stm32f0xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
</UL>

<P><STRONG><a name="[76]"></a>USART_SendData</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f0xx_usart.o(i.USART_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART_SendData &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[77]"></a>Usart_Debug_Init</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, asmplatformconfig.o(i.Usart_Debug_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Usart_Debug_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>WaterPump_WorkStateDetect</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, asmplatformconfig.o(i.WaterPump_WorkStateDetect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = WaterPump_WorkStateDetect &rArr; ADC_GetFlagStatus &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOutSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTimeOut
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>__0printf$5</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[89]"></a>__1printf$5</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5), UNUSED)

<P><STRONG><a name="[53]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf5.o(i.__0printf$5))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Systick_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;assert_failed
</UL>

<P><STRONG><a name="[49]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, single_pwm_led.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispAutoChange
</UL>

<P><STRONG><a name="[8a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[30]"></a>assert_failed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.assert_failed))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetClockDivision
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetAutoreload
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectOCxM
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PolarityConfig
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PolarityConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PolarityConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PolarityConfig
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CounterModeConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
</UL>

<P><STRONG><a name="[23]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, asmplatformconfig.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = fputc &rArr; USART_SendData &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf5.o(i.__0printf$5)
</UL>
<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = main &rArr; Usart_Debug_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaterPump_WorkStateDetect
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_Debug_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WaterPump_Control
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Systick_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwm_SaveConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispStateSet
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_DispInit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispStateSet
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioKeyScan
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpioKeyInit
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOutSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTimeOut
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[21]"></a>Led_DispAutoChange</STRONG> (Thumb, 418 bytes, Stack size 48 bytes, single_pwm_led.o(i.Led_DispAutoChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Led_DispAutoChange &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTimerPeriod
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_pwm_led.o(i.Led_DispInit)
</UL>
<P><STRONG><a name="[4d]"></a>Led_ScanGpioConfig</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, single_pwm_led.o(i.Led_ScanGpioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Led_ScanGpioConfig &rArr; GPIO_Init &rArr; assert_failed &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_DispInit
</UL>

<P><STRONG><a name="[22]"></a>Light_DispAutoChange</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, single_pwm_light.o(i.Light_DispAutoChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Light_DispAutoChange &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeTimerPeriod
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> single_pwm_light.o(i.Light_DispInit)
</UL>
<P><STRONG><a name="[6c]"></a>SetSysClock</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, system_stm32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[6e]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, asmplatformconfig.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Systick_Init
</UL>

<P><STRONG><a name="[7a]"></a>_printf_core</STRONG> (Thumb, 688 bytes, Stack size 96 bytes, printf5.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$5
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
